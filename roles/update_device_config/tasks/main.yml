---
- name: "Set ideascube index"
  set_fact:
    ideascube_index: "{{idx}}"
  when: item.name == "ideascube"
  loop: "{{ containers }}"
  loop_control:
    index_var: idx

- name: "Set kolibri index"
  set_fact:
    kolibri_index: "{{idx}}"
  when: item.name == "kolibri"
  loop: "{{ containers }}"
  loop_control:
    index_var: idx

- name: "Set kiwix index"
  set_fact:
    kiwix_index: "{{idx}}"
  when: item.name == "kiwix"
  loop: "{{ containers }}"
  loop_control:
    index_var: idx

- name: "Set hugo index"
  set_fact:
    hugo_index: "{{idx}}"
  when: item.name == "hugo"
  loop: "{{ containers }}"
  loop_control:
    index_var: idx

- debug:
    msg: Ideascube "{{ideascube_index}}", Kolibri "{{kolibri_index}}", Kiwix "{{kiwix_index}}", Hugo "{{hugo_index | default(omit)}}"

- name: Set device name variable
  set_fact:
    hostname: "{{ project_name }}"
    full_device_name: "{{ project_name }}-{{ ansible_default_ipv4.macaddress[11:17] | replace(':', '') }}"

- debug: msg="Start playbook {{ ansible_date_time["date"] }} - {{ ansible_date_time["time"] }} - I'm a {{ project_domain_name }} / {{full_device_name}}"

- name: Backup current configuration
  archive:
    path: /etc/config
    dest: /etc/factory-config.tgz

- name: Ensure custom facts directory exists
  file:
    path: /etc/ansible/facts.d
    recurse: yes
    state: directory

- name: Populate hosts file
  lineinfile:
    dest: /etc/hosts
    line: '192.168.1.1 {{ project_domain_name }} kiwix.{{ project_domain_name }} kolibri.{{ project_domain_name }} sites.{{ project_domain_name }} bsfcampus.{{ project_domain_name }}'

- name: Switch to FDN DNS server
  command: uci set dhcp.@dnsmasq[0].server='80.67.169.12'

- name: Server entries in /etc/hosts
  command: uci set dhcp.@dnsmasq[0].domain='io'

- name: Ensure dnsmasq address is not present
  shell: uci get dhcp.@dnsmasq[0].address ; echo
  register: conf

- name: Resolv domain and sub-domaine to AP ip address
  command: uci add_list dhcp.@dnsmasq[0].address='/{{project_domain_name}}/192.168.1.1'
  when: conf.stdout == ""

- name: Change nodogsplash URL to redirect to
  command: uci set nodogsplash.@instance[0].redirecturl='http://{{project_domain_name}}'

- name: Set gateway name
  command: uci set nodogsplash.@instance[0].gatewayname='{{project_domain_name}}'

- name: Enable nodogsplash
  command: uci set nodogsplash.@instance[0].enabled='0'

- name: Set hostname
  command: uci set system.@system[0].hostname='{{project_domain_name}}'

- name: Set system wide hostname
  shell: echo {{ full_device_name }} > /etc/hostname

- name: Set timezone
  command: uci set system.@system[0].timezone='{{ timezone }}'

- name: Change SSID for 2.4Ghz
  command: uci set wireless.@wifi-iface[0].ssid='{{full_device_name}}-2.4G'

- name: Change SSID for 5Ghz
  command: uci set wireless.@wifi-iface[1].ssid='{{full_device_name}}-5G'

- name: Commit changes
  command: uci commit {{item}}
  with_items:
    - dhcp
    - nodogsplash
    - system
    - wireless

- name: Modify nodogsplash html page
  template:
    src: splash.html.j2
    dest: /etc/nodogsplash/htdocs/splash.html

- block:
  - name: Check if a local_cache_server cache machine is present on the local network
    wait_for: host="{{ local_cache_server }}" port=80 state=present timeout=3
    register: cache_machine
  rescue:
  - debug: msg="No cache machine has been detected on the local network"

- block:
  - name: Check if in BSF local network
    wait_for: host="{{ bsf_gateway }}" port=80 state=present timeout=3
    register: bsf_local_network
  rescue:
  - debug: msg="Not in BSF local network"

- name: Copy tweaked hotplug.d firewall service script
  copy:
    src: "20-firewall"
    dest: /etc/hotplug.d/iface/20-firewall

- name: Copy tweaked hotplug.d dnsmasq service script
  template:
    src: "25-dnsmasq.j2"
    dest: /etc/hotplug.d/iface/25-dnsmasq
